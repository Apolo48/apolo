package modelo;

// Generated 16-dic-2011 17:19:16 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona")
public class Persona implements java.io.Serializable {

	private String cedulaRif;
	private DatoBasico datoBasico;
	private String telefonoHabitacion;
	private Date fechaIngreso;
	private String correoElectronico;
	private String facebook;
	private String twitter;
	private String direccion;
	private Date fechaEgreso;
	private Date fechaNacimiento;
	private char sexo;
	private PersonaJuridica personaJuridica;
	private Jugador jugador;
	private Familiar familiar;
	private PersonaNatural personaNatural;

	public Persona() {
	}

	public Persona(String cedulaRif, DatoBasico datoBasico,
			String telefonoHabitacion, Date fechaIngreso,
			String correoElectronico, String facebook, String twitter,
			String direccion, Date fechaEgreso, Date fechaNacimiento, char sexo) {
		this.cedulaRif = cedulaRif;
		this.datoBasico = datoBasico;
		this.telefonoHabitacion = telefonoHabitacion;
		this.fechaIngreso = fechaIngreso;
		this.correoElectronico = correoElectronico;
		this.facebook = facebook;
		this.twitter = twitter;
		this.direccion = direccion;
		this.fechaEgreso = fechaEgreso;
		this.fechaNacimiento = fechaNacimiento;
		this.sexo = sexo;
	}

	public Persona(String cedulaRif, DatoBasico datoBasico,
			String telefonoHabitacion, Date fechaIngreso,
			String correoElectronico, String facebook, String twitter,
			String direccion, Date fechaEgreso, Date fechaNacimiento,
			char sexo, PersonaJuridica personaJuridica, Jugador jugador,
			Familiar familiar, PersonaNatural personaNatural) {
		this.cedulaRif = cedulaRif;
		this.datoBasico = datoBasico;
		this.telefonoHabitacion = telefonoHabitacion;
		this.fechaIngreso = fechaIngreso;
		this.correoElectronico = correoElectronico;
		this.facebook = facebook;
		this.twitter = twitter;
		this.direccion = direccion;
		this.fechaEgreso = fechaEgreso;
		this.fechaNacimiento = fechaNacimiento;
		this.sexo = sexo;
		this.personaJuridica = personaJuridica;
		this.jugador = jugador;
		this.familiar = familiar;
		this.personaNatural = personaNatural;
	}

	@Id
	@Column(name = "cedula_rif", unique = true, nullable = false)
	public String getCedulaRif() {
		return this.cedulaRif;
	}

	public void setCedulaRif(String cedulaRif) {
		this.cedulaRif = cedulaRif;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_parroquia", nullable = false)
	public DatoBasico getDatoBasico() {
		return this.datoBasico;
	}

	public void setDatoBasico(DatoBasico datoBasico) {
		this.datoBasico = datoBasico;
	}

	@Column(name = "telefono_habitacion", nullable = false)
	public String getTelefonoHabitacion() {
		return this.telefonoHabitacion;
	}

	public void setTelefonoHabitacion(String telefonoHabitacion) {
		this.telefonoHabitacion = telefonoHabitacion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_ingreso", nullable = false, length = 13)
	public Date getFechaIngreso() {
		return this.fechaIngreso;
	}

	public void setFechaIngreso(Date fechaIngreso) {
		this.fechaIngreso = fechaIngreso;
	}

	@Column(name = "correo_electronico", nullable = false)
	public String getCorreoElectronico() {
		return this.correoElectronico;
	}

	public void setCorreoElectronico(String correoElectronico) {
		this.correoElectronico = correoElectronico;
	}

	@Column(name = "facebook", nullable = false)
	public String getFacebook() {
		return this.facebook;
	}

	public void setFacebook(String facebook) {
		this.facebook = facebook;
	}

	@Column(name = "twitter", nullable = false)
	public String getTwitter() {
		return this.twitter;
	}

	public void setTwitter(String twitter) {
		this.twitter = twitter;
	}

	@Column(name = "direccion", nullable = false)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_egreso", nullable = false, length = 13)
	public Date getFechaEgreso() {
		return this.fechaEgreso;
	}

	public void setFechaEgreso(Date fechaEgreso) {
		this.fechaEgreso = fechaEgreso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_nacimiento", nullable = false, length = 13)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "sexo", nullable = false, length = 1)
	public char getSexo() {
		return this.sexo;
	}

	public void setSexo(char sexo) {
		this.sexo = sexo;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersonaJuridica getPersonaJuridica() {
		return this.personaJuridica;
	}

	public void setPersonaJuridica(PersonaJuridica personaJuridica) {
		this.personaJuridica = personaJuridica;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public Jugador getJugador() {
		return this.jugador;
	}

	public void setJugador(Jugador jugador) {
		this.jugador = jugador;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public Familiar getFamiliar() {
		return this.familiar;
	}

	public void setFamiliar(Familiar familiar) {
		this.familiar = familiar;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersonaNatural getPersonaNatural() {
		return this.personaNatural;
	}

	public void setPersonaNatural(PersonaNatural personaNatural) {
		this.personaNatural = personaNatural;
	}

}
