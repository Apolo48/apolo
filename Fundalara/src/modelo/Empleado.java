package modelo;

// Generated 05-dic-2011 23:09:14 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Empleado generated by hbm2java
 */
@Entity
@Table(name = "empleado")
public class Empleado implements java.io.Serializable {

	private String cedula;
	private Parroquia parroquia;
	private String primerApellido;
	private byte[] foto;
	private String segundoApellido;
	private String segundoNombre;
	private String direccion;
	private String cuentaFacebook;
	private String primerNombre;
	private String cuentaTwitter;
	private String correoElectronico;
	private int cantidadHijos;
	private String telefono2;
	private String estadoCivil;
	private Date fechaEgreso;
	private String tipoSangre;
	private char estatus;
	private String telefono1;
	private Set<EmpleadoAlergia> empleadoAlergias = new HashSet<EmpleadoAlergia>(
			0);
	private Set<EmpleadoMantenimiento> empleadoMantenimientos = new HashSet<EmpleadoMantenimiento>(
			0);
	private Set<EmpleadoMantenimientoPlanificado> empleadoMantenimientoPlanificados = new HashSet<EmpleadoMantenimientoPlanificado>(
			0);
	private Set<DatoAcademicoEmpleado> datoAcademicoEmpleados = new HashSet<DatoAcademicoEmpleado>(
			0);
	private Set<EmpleadoTipoNomina> empleadoTipoNominas = new HashSet<EmpleadoTipoNomina>(
			0);
	private Set<EmpleadoConceptoNomina> empleadoConceptoNominas = new HashSet<EmpleadoConceptoNomina>(
			0);
	private Set<EmpleadoSueldo> empleadoSueldos = new HashSet<EmpleadoSueldo>(0);
	private Set<EmpleadoCargo> empleadoCargos = new HashSet<EmpleadoCargo>(0);

	public Empleado() {
	}

	public Empleado(String cedula, Parroquia parroquia, String primerApellido,
			String direccion, String primerNombre, int cantidadHijos,
			String estadoCivil, Date fechaEgreso, String tipoSangre,
			char estatus) {
		this.cedula = cedula;
		this.parroquia = parroquia;
		this.primerApellido = primerApellido;
		this.direccion = direccion;
		this.primerNombre = primerNombre;
		this.cantidadHijos = cantidadHijos;
		this.estadoCivil = estadoCivil;
		this.fechaEgreso = fechaEgreso;
		this.tipoSangre = tipoSangre;
		this.estatus = estatus;
	}

	public Empleado(
			String cedula,
			Parroquia parroquia,
			String primerApellido,
			byte[] foto,
			String segundoApellido,
			String segundoNombre,
			String direccion,
			String cuentaFacebook,
			String primerNombre,
			String cuentaTwitter,
			String correoElectronico,
			int cantidadHijos,
			String telefono2,
			String estadoCivil,
			Date fechaEgreso,
			String tipoSangre,
			char estatus,
			String telefono1,
			Set<EmpleadoAlergia> empleadoAlergias,
			Set<EmpleadoMantenimiento> empleadoMantenimientos,
			Set<EmpleadoMantenimientoPlanificado> empleadoMantenimientoPlanificados,
			Set<DatoAcademicoEmpleado> datoAcademicoEmpleados,
			Set<EmpleadoTipoNomina> empleadoTipoNominas,
			Set<EmpleadoConceptoNomina> empleadoConceptoNominas,
			Set<EmpleadoSueldo> empleadoSueldos,
			Set<EmpleadoCargo> empleadoCargos) {
		this.cedula = cedula;
		this.parroquia = parroquia;
		this.primerApellido = primerApellido;
		this.foto = foto;
		this.segundoApellido = segundoApellido;
		this.segundoNombre = segundoNombre;
		this.direccion = direccion;
		this.cuentaFacebook = cuentaFacebook;
		this.primerNombre = primerNombre;
		this.cuentaTwitter = cuentaTwitter;
		this.correoElectronico = correoElectronico;
		this.cantidadHijos = cantidadHijos;
		this.telefono2 = telefono2;
		this.estadoCivil = estadoCivil;
		this.fechaEgreso = fechaEgreso;
		this.tipoSangre = tipoSangre;
		this.estatus = estatus;
		this.telefono1 = telefono1;
		this.empleadoAlergias = empleadoAlergias;
		this.empleadoMantenimientos = empleadoMantenimientos;
		this.empleadoMantenimientoPlanificados = empleadoMantenimientoPlanificados;
		this.datoAcademicoEmpleados = datoAcademicoEmpleados;
		this.empleadoTipoNominas = empleadoTipoNominas;
		this.empleadoConceptoNominas = empleadoConceptoNominas;
		this.empleadoSueldos = empleadoSueldos;
		this.empleadoCargos = empleadoCargos;
	}

	@Id
	@Column(name = "cedula", unique = true, nullable = false)
	public String getCedula() {
		return this.cedula;
	}

	public void setCedula(String cedula) {
		this.cedula = cedula;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_parroquia", nullable = false)
	public Parroquia getParroquia() {
		return this.parroquia;
	}

	public void setParroquia(Parroquia parroquia) {
		this.parroquia = parroquia;
	}

	@Column(name = "primer_apellido", nullable = false)
	public String getPrimerApellido() {
		return this.primerApellido;
	}

	public void setPrimerApellido(String primerApellido) {
		this.primerApellido = primerApellido;
	}

	@Column(name = "foto")
	public byte[] getFoto() {
		return this.foto;
	}

	public void setFoto(byte[] foto) {
		this.foto = foto;
	}

	@Column(name = "segundo_apellido")
	public String getSegundoApellido() {
		return this.segundoApellido;
	}

	public void setSegundoApellido(String segundoApellido) {
		this.segundoApellido = segundoApellido;
	}

	@Column(name = "segundo_nombre")
	public String getSegundoNombre() {
		return this.segundoNombre;
	}

	public void setSegundoNombre(String segundoNombre) {
		this.segundoNombre = segundoNombre;
	}

	@Column(name = "direccion", nullable = false)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "cuenta_facebook")
	public String getCuentaFacebook() {
		return this.cuentaFacebook;
	}

	public void setCuentaFacebook(String cuentaFacebook) {
		this.cuentaFacebook = cuentaFacebook;
	}

	@Column(name = "primer_nombre", nullable = false)
	public String getPrimerNombre() {
		return this.primerNombre;
	}

	public void setPrimerNombre(String primerNombre) {
		this.primerNombre = primerNombre;
	}

	@Column(name = "cuenta_twitter")
	public String getCuentaTwitter() {
		return this.cuentaTwitter;
	}

	public void setCuentaTwitter(String cuentaTwitter) {
		this.cuentaTwitter = cuentaTwitter;
	}

	@Column(name = "correo_electronico")
	public String getCorreoElectronico() {
		return this.correoElectronico;
	}

	public void setCorreoElectronico(String correoElectronico) {
		this.correoElectronico = correoElectronico;
	}

	@Column(name = "cantidad_hijos", nullable = false)
	public int getCantidadHijos() {
		return this.cantidadHijos;
	}

	public void setCantidadHijos(int cantidadHijos) {
		this.cantidadHijos = cantidadHijos;
	}

	@Column(name = "telefono2")
	public String getTelefono2() {
		return this.telefono2;
	}

	public void setTelefono2(String telefono2) {
		this.telefono2 = telefono2;
	}

	@Column(name = "estado_civil", nullable = false)
	public String getEstadoCivil() {
		return this.estadoCivil;
	}

	public void setEstadoCivil(String estadoCivil) {
		this.estadoCivil = estadoCivil;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_egreso", nullable = false, length = 13)
	public Date getFechaEgreso() {
		return this.fechaEgreso;
	}

	public void setFechaEgreso(Date fechaEgreso) {
		this.fechaEgreso = fechaEgreso;
	}

	@Column(name = "tipo_sangre", nullable = false)
	public String getTipoSangre() {
		return this.tipoSangre;
	}

	public void setTipoSangre(String tipoSangre) {
		this.tipoSangre = tipoSangre;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@Column(name = "telefono1")
	public String getTelefono1() {
		return this.telefono1;
	}

	public void setTelefono1(String telefono1) {
		this.telefono1 = telefono1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoAlergia> getEmpleadoAlergias() {
		return this.empleadoAlergias;
	}

	public void setEmpleadoAlergias(Set<EmpleadoAlergia> empleadoAlergias) {
		this.empleadoAlergias = empleadoAlergias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoMantenimiento> getEmpleadoMantenimientos() {
		return this.empleadoMantenimientos;
	}

	public void setEmpleadoMantenimientos(
			Set<EmpleadoMantenimiento> empleadoMantenimientos) {
		this.empleadoMantenimientos = empleadoMantenimientos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoMantenimientoPlanificado> getEmpleadoMantenimientoPlanificados() {
		return this.empleadoMantenimientoPlanificados;
	}

	public void setEmpleadoMantenimientoPlanificados(
			Set<EmpleadoMantenimientoPlanificado> empleadoMantenimientoPlanificados) {
		this.empleadoMantenimientoPlanificados = empleadoMantenimientoPlanificados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<DatoAcademicoEmpleado> getDatoAcademicoEmpleados() {
		return this.datoAcademicoEmpleados;
	}

	public void setDatoAcademicoEmpleados(
			Set<DatoAcademicoEmpleado> datoAcademicoEmpleados) {
		this.datoAcademicoEmpleados = datoAcademicoEmpleados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoTipoNomina> getEmpleadoTipoNominas() {
		return this.empleadoTipoNominas;
	}

	public void setEmpleadoTipoNominas(
			Set<EmpleadoTipoNomina> empleadoTipoNominas) {
		this.empleadoTipoNominas = empleadoTipoNominas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoConceptoNomina> getEmpleadoConceptoNominas() {
		return this.empleadoConceptoNominas;
	}

	public void setEmpleadoConceptoNominas(
			Set<EmpleadoConceptoNomina> empleadoConceptoNominas) {
		this.empleadoConceptoNominas = empleadoConceptoNominas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoSueldo> getEmpleadoSueldos() {
		return this.empleadoSueldos;
	}

	public void setEmpleadoSueldos(Set<EmpleadoSueldo> empleadoSueldos) {
		this.empleadoSueldos = empleadoSueldos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "empleado")
	public Set<EmpleadoCargo> getEmpleadoCargos() {
		return this.empleadoCargos;
	}

	public void setEmpleadoCargos(Set<EmpleadoCargo> empleadoCargos) {
		this.empleadoCargos = empleadoCargos;
	}

}
