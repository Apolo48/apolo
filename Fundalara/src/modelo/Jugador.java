package modelo;

// Generated 16-dic-2011 17:19:16 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Jugador generated by hbm2java
 */
@Entity
@Table(name = "jugador")
public class Jugador implements java.io.Serializable {

	private String cedulaRif;
	private DatoBasico datoBasico;
	private Persona persona;
	private int numero;
	private String tipoDeSangre;
	private double peso;
	private double altura;
	private String brazoLanzar;
	private String posicionBateo;
	private Set<TallaPorJugador> tallaPorJugadors = new HashSet<TallaPorJugador>(
			0);
	private Set<FamiliarJugador> familiarJugadors = new HashSet<FamiliarJugador>(
			0);
	private Set<DatoMedico> datoMedicos = new HashSet<DatoMedico>(0);
	private Set<ParticipantePlan> participantePlans = new HashSet<ParticipantePlan>(
			0);
	private Set<DatoAcademico> datoAcademicos = new HashSet<DatoAcademico>(0);
	private Set<DatoSocial> datoSocials = new HashSet<DatoSocial>(0);
	private Set<DatoConducta> datoConductas = new HashSet<DatoConducta>(0);
	private Set<Roster> rosters = new HashSet<Roster>(0);
	private Set<DatoDeportivo> datoDeportivos = new HashSet<DatoDeportivo>(0);

	public Jugador() {
	}

	public Jugador(DatoBasico datoBasico, Persona persona, int numero,
			String tipoDeSangre, double peso, double altura,
			String brazoLanzar, String posicionBateo) {
		this.datoBasico = datoBasico;
		this.persona = persona;
		this.numero = numero;
		this.tipoDeSangre = tipoDeSangre;
		this.peso = peso;
		this.altura = altura;
		this.brazoLanzar = brazoLanzar;
		this.posicionBateo = posicionBateo;
	}

	public Jugador(DatoBasico datoBasico, Persona persona, int numero,
			String tipoDeSangre, double peso, double altura,
			String brazoLanzar, String posicionBateo,
			Set<TallaPorJugador> tallaPorJugadors,
			Set<FamiliarJugador> familiarJugadors, Set<DatoMedico> datoMedicos,
			Set<ParticipantePlan> participantePlans,
			Set<DatoAcademico> datoAcademicos, Set<DatoSocial> datoSocials,
			Set<DatoConducta> datoConductas, Set<Roster> rosters,
			Set<DatoDeportivo> datoDeportivos) {
		this.datoBasico = datoBasico;
		this.persona = persona;
		this.numero = numero;
		this.tipoDeSangre = tipoDeSangre;
		this.peso = peso;
		this.altura = altura;
		this.brazoLanzar = brazoLanzar;
		this.posicionBateo = posicionBateo;
		this.tallaPorJugadors = tallaPorJugadors;
		this.familiarJugadors = familiarJugadors;
		this.datoMedicos = datoMedicos;
		this.participantePlans = participantePlans;
		this.datoAcademicos = datoAcademicos;
		this.datoSocials = datoSocials;
		this.datoConductas = datoConductas;
		this.rosters = rosters;
		this.datoDeportivos = datoDeportivos;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "persona"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "cedula_rif", unique = true, nullable = false)
	public String getCedulaRif() {
		return this.cedulaRif;
	}

	public void setCedulaRif(String cedulaRif) {
		this.cedulaRif = cedulaRif;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_parroquia", nullable = false)
	public DatoBasico getDatoBasico() {
		return this.datoBasico;
	}

	public void setDatoBasico(DatoBasico datoBasico) {
		this.datoBasico = datoBasico;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Column(name = "numero", nullable = false)
	public int getNumero() {
		return this.numero;
	}

	public void setNumero(int numero) {
		this.numero = numero;
	}

	@Column(name = "tipo_de_sangre", nullable = false)
	public String getTipoDeSangre() {
		return this.tipoDeSangre;
	}

	public void setTipoDeSangre(String tipoDeSangre) {
		this.tipoDeSangre = tipoDeSangre;
	}

	@Column(name = "peso", nullable = false, precision = 17, scale = 17)
	public double getPeso() {
		return this.peso;
	}

	public void setPeso(double peso) {
		this.peso = peso;
	}

	@Column(name = "altura", nullable = false, precision = 17, scale = 17)
	public double getAltura() {
		return this.altura;
	}

	public void setAltura(double altura) {
		this.altura = altura;
	}

	@Column(name = "brazo_lanzar", nullable = false)
	public String getBrazoLanzar() {
		return this.brazoLanzar;
	}

	public void setBrazoLanzar(String brazoLanzar) {
		this.brazoLanzar = brazoLanzar;
	}

	@Column(name = "posicion_bateo", nullable = false)
	public String getPosicionBateo() {
		return this.posicionBateo;
	}

	public void setPosicionBateo(String posicionBateo) {
		this.posicionBateo = posicionBateo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<TallaPorJugador> getTallaPorJugadors() {
		return this.tallaPorJugadors;
	}

	public void setTallaPorJugadors(Set<TallaPorJugador> tallaPorJugadors) {
		this.tallaPorJugadors = tallaPorJugadors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<FamiliarJugador> getFamiliarJugadors() {
		return this.familiarJugadors;
	}

	public void setFamiliarJugadors(Set<FamiliarJugador> familiarJugadors) {
		this.familiarJugadors = familiarJugadors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoMedico> getDatoMedicos() {
		return this.datoMedicos;
	}

	public void setDatoMedicos(Set<DatoMedico> datoMedicos) {
		this.datoMedicos = datoMedicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<ParticipantePlan> getParticipantePlans() {
		return this.participantePlans;
	}

	public void setParticipantePlans(Set<ParticipantePlan> participantePlans) {
		this.participantePlans = participantePlans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoAcademico> getDatoAcademicos() {
		return this.datoAcademicos;
	}

	public void setDatoAcademicos(Set<DatoAcademico> datoAcademicos) {
		this.datoAcademicos = datoAcademicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoSocial> getDatoSocials() {
		return this.datoSocials;
	}

	public void setDatoSocials(Set<DatoSocial> datoSocials) {
		this.datoSocials = datoSocials;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoConducta> getDatoConductas() {
		return this.datoConductas;
	}

	public void setDatoConductas(Set<DatoConducta> datoConductas) {
		this.datoConductas = datoConductas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<Roster> getRosters() {
		return this.rosters;
	}

	public void setRosters(Set<Roster> rosters) {
		this.rosters = rosters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoDeportivo> getDatoDeportivos() {
		return this.datoDeportivos;
	}

	public void setDatoDeportivos(Set<DatoDeportivo> datoDeportivos) {
		this.datoDeportivos = datoDeportivos;
	}

}
