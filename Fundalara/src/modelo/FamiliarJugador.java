package modelo;

// Generated 13-dic-2011 21:15:29 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * FamiliarJugador generated by hbm2java
 */
@Entity
@Table(name = "familiar_jugador")
public class FamiliarJugador implements java.io.Serializable {

	private FamiliarJugadorId id;
	private Parentesco parentesco;
	private Jugador jugador;
	private Familiar familiar;
	private char estatus;
	private Date fechaIngreso;
	private Representante representante;
	private Set<Hospedaje> hospedajes = new HashSet<Hospedaje>(0);
	private Set<FamiliarComisionEquipo> familiarComisionEquipos = new HashSet<FamiliarComisionEquipo>(
			0);

	public FamiliarJugador() {
	}

	public FamiliarJugador(FamiliarJugadorId id, Parentesco parentesco,
			Jugador jugador, Familiar familiar, char estatus, Date fechaIngreso) {
		this.id = id;
		this.parentesco = parentesco;
		this.jugador = jugador;
		this.familiar = familiar;
		this.estatus = estatus;
		this.fechaIngreso = fechaIngreso;
	}

	public FamiliarJugador(FamiliarJugadorId id, Parentesco parentesco,
			Jugador jugador, Familiar familiar, char estatus,
			Date fechaIngreso, Representante representante,
			Set<Hospedaje> hospedajes,
			Set<FamiliarComisionEquipo> familiarComisionEquipos) {
		this.id = id;
		this.parentesco = parentesco;
		this.jugador = jugador;
		this.familiar = familiar;
		this.estatus = estatus;
		this.fechaIngreso = fechaIngreso;
		this.representante = representante;
		this.hospedajes = hospedajes;
		this.familiarComisionEquipos = familiarComisionEquipos;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "cedulaJugador", column = @Column(name = "cedula_jugador", nullable = false)),
			@AttributeOverride(name = "cedulaFamiliar", column = @Column(name = "cedula_familiar", nullable = false)) })
	public FamiliarJugadorId getId() {
		return this.id;
	}

	public void setId(FamiliarJugadorId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_parentesco", nullable = false)
	public Parentesco getParentesco() {
		return this.parentesco;
	}

	public void setParentesco(Parentesco parentesco) {
		this.parentesco = parentesco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cedula_jugador", nullable = false, insertable = false, updatable = false)
	public Jugador getJugador() {
		return this.jugador;
	}

	public void setJugador(Jugador jugador) {
		this.jugador = jugador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cedula_familiar", nullable = false, insertable = false, updatable = false)
	public Familiar getFamiliar() {
		return this.familiar;
	}

	public void setFamiliar(Familiar familiar) {
		this.familiar = familiar;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_ingreso", nullable = false, length = 13)
	public Date getFechaIngreso() {
		return this.fechaIngreso;
	}

	public void setFechaIngreso(Date fechaIngreso) {
		this.fechaIngreso = fechaIngreso;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "familiarJugador")
	public Representante getRepresentante() {
		return this.representante;
	}

	public void setRepresentante(Representante representante) {
		this.representante = representante;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "familiarJugador")
	public Set<Hospedaje> getHospedajes() {
		return this.hospedajes;
	}

	public void setHospedajes(Set<Hospedaje> hospedajes) {
		this.hospedajes = hospedajes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "familiarJugador")
	public Set<FamiliarComisionEquipo> getFamiliarComisionEquipos() {
		return this.familiarComisionEquipos;
	}

	public void setFamiliarComisionEquipos(
			Set<FamiliarComisionEquipo> familiarComisionEquipos) {
		this.familiarComisionEquipos = familiarComisionEquipos;
	}

}
