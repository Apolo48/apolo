package modelo;

// Generated 02-ene-2012 20:17:38 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SesionEjecutada generated by hbm2java
 */
@Entity
@Table(name = "sesion_ejecutada", schema = "public")
public class SesionEjecutada implements java.io.Serializable {

	private int codigoSesionEjecutada;
	private DatoBasico datoBasico;
	private PlanRotacion planRotacion;
	private Instalacion instalacion;
	private PlanEntrenamiento planEntrenamiento;
	private Equipo equipo;
	private Date fecha;
	private Date horaInicio;
	private Date horaFin;
	private char estatus;
	private Set<AsistenciaJugador> asistenciaJugadors = new HashSet<AsistenciaJugador>(
			0);
	private Set<AsistenciaPersonalEntrenamiento> asistenciaPersonalEntrenamientos = new HashSet<AsistenciaPersonalEntrenamiento>(
			0);
	private Set<ActividadesEjecutadas> actividadesEjecutadases = new HashSet<ActividadesEjecutadas>(
			0);

	public SesionEjecutada() {
	}

	public SesionEjecutada(int codigoSesionEjecutada, DatoBasico datoBasico,
			PlanRotacion planRotacion, Instalacion instalacion,
			PlanEntrenamiento planEntrenamiento, Equipo equipo, Date fecha,
			Date horaInicio, Date horaFin, char estatus) {
		this.codigoSesionEjecutada = codigoSesionEjecutada;
		this.datoBasico = datoBasico;
		this.planRotacion = planRotacion;
		this.instalacion = instalacion;
		this.planEntrenamiento = planEntrenamiento;
		this.equipo = equipo;
		this.fecha = fecha;
		this.horaInicio = horaInicio;
		this.horaFin = horaFin;
		this.estatus = estatus;
	}

	public SesionEjecutada(
			int codigoSesionEjecutada,
			DatoBasico datoBasico,
			PlanRotacion planRotacion,
			Instalacion instalacion,
			PlanEntrenamiento planEntrenamiento,
			Equipo equipo,
			Date fecha,
			Date horaInicio,
			Date horaFin,
			char estatus,
			Set<AsistenciaJugador> asistenciaJugadors,
			Set<AsistenciaPersonalEntrenamiento> asistenciaPersonalEntrenamientos,
			Set<ActividadesEjecutadas> actividadesEjecutadases) {
		this.codigoSesionEjecutada = codigoSesionEjecutada;
		this.datoBasico = datoBasico;
		this.planRotacion = planRotacion;
		this.instalacion = instalacion;
		this.planEntrenamiento = planEntrenamiento;
		this.equipo = equipo;
		this.fecha = fecha;
		this.horaInicio = horaInicio;
		this.horaFin = horaFin;
		this.estatus = estatus;
		this.asistenciaJugadors = asistenciaJugadors;
		this.asistenciaPersonalEntrenamientos = asistenciaPersonalEntrenamientos;
		this.actividadesEjecutadases = actividadesEjecutadases;
	}

	@Id
	@Column(name = "codigo_sesion_ejecutada", unique = true, nullable = false)
	public int getCodigoSesionEjecutada() {
		return this.codigoSesionEjecutada;
	}

	public void setCodigoSesionEjecutada(int codigoSesionEjecutada) {
		this.codigoSesionEjecutada = codigoSesionEjecutada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "eventualidad", nullable = false)
	public DatoBasico getDatoBasico() {
		return this.datoBasico;
	}

	public void setDatoBasico(DatoBasico datoBasico) {
		this.datoBasico = datoBasico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_plan_rotacion", nullable = false)
	public PlanRotacion getPlanRotacion() {
		return this.planRotacion;
	}

	public void setPlanRotacion(PlanRotacion planRotacion) {
		this.planRotacion = planRotacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_instalacion", nullable = false)
	public Instalacion getInstalacion() {
		return this.instalacion;
	}

	public void setInstalacion(Instalacion instalacion) {
		this.instalacion = instalacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_plan_entrenamiento", nullable = false)
	public PlanEntrenamiento getPlanEntrenamiento() {
		return this.planEntrenamiento;
	}

	public void setPlanEntrenamiento(PlanEntrenamiento planEntrenamiento) {
		this.planEntrenamiento = planEntrenamiento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_equipo", nullable = false)
	public Equipo getEquipo() {
		return this.equipo;
	}

	public void setEquipo(Equipo equipo) {
		this.equipo = equipo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha", nullable = false, length = 13)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "hora_inicio", nullable = false, length = 15)
	public Date getHoraInicio() {
		return this.horaInicio;
	}

	public void setHoraInicio(Date horaInicio) {
		this.horaInicio = horaInicio;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "hora_fin", nullable = false, length = 15)
	public Date getHoraFin() {
		return this.horaFin;
	}

	public void setHoraFin(Date horaFin) {
		this.horaFin = horaFin;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sesionEjecutada")
	public Set<AsistenciaJugador> getAsistenciaJugadors() {
		return this.asistenciaJugadors;
	}

	public void setAsistenciaJugadors(Set<AsistenciaJugador> asistenciaJugadors) {
		this.asistenciaJugadors = asistenciaJugadors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sesionEjecutada")
	public Set<AsistenciaPersonalEntrenamiento> getAsistenciaPersonalEntrenamientos() {
		return this.asistenciaPersonalEntrenamientos;
	}

	public void setAsistenciaPersonalEntrenamientos(
			Set<AsistenciaPersonalEntrenamiento> asistenciaPersonalEntrenamientos) {
		this.asistenciaPersonalEntrenamientos = asistenciaPersonalEntrenamientos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sesionEjecutada")
	public Set<ActividadesEjecutadas> getActividadesEjecutadases() {
		return this.actividadesEjecutadases;
	}

	public void setActividadesEjecutadases(
			Set<ActividadesEjecutadas> actividadesEjecutadases) {
		this.actividadesEjecutadases = actividadesEjecutadases;
	}

}
