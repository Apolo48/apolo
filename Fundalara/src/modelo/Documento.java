package modelo;

// Generated 13-dic-2011 23:21:03 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Documento generated by hbm2java
 */
@Entity
@Table(name = "documento")
public class Documento implements java.io.Serializable {

	private String codigoDocumento;
	private String nombre;
	private char estatus;
	private Set<RecaudoPorProceso> recaudoPorProcesos = new HashSet<RecaudoPorProceso>(
			0);

	public Documento() {
	}

	public Documento(String codigoDocumento, String nombre, char estatus) {
		this.codigoDocumento = codigoDocumento;
		this.nombre = nombre;
		this.estatus = estatus;
	}

	public Documento(String codigoDocumento, String nombre, char estatus,
			Set<RecaudoPorProceso> recaudoPorProcesos) {
		this.codigoDocumento = codigoDocumento;
		this.nombre = nombre;
		this.estatus = estatus;
		this.recaudoPorProcesos = recaudoPorProcesos;
	}

	@Id
	@Column(name = "codigo_documento", unique = true, nullable = false)
	public String getCodigoDocumento() {
		return this.codigoDocumento;
	}

	public void setCodigoDocumento(String codigoDocumento) {
		this.codigoDocumento = codigoDocumento;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documento")
	public Set<RecaudoPorProceso> getRecaudoPorProcesos() {
		return this.recaudoPorProcesos;
	}

	public void setRecaudoPorProcesos(Set<RecaudoPorProceso> recaudoPorProcesos) {
		this.recaudoPorProcesos = recaudoPorProcesos;
	}

}
